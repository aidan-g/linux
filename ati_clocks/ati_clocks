#!/bin/sh

LOG_FILE="/var/log/$(basename $0).log"

if [ -f "$LOG_FILE" ]
then
        rm "$LOG_FILE"
fi

function log()
{
        MESSAGE="[$(date)] => [$0]: $*"
        echo "$MESSAGE"
        echo "$MESSAGE" >> "$LOG_FILE"
}


ATICONFIG="/opt/bin/aticonfig"

if [ ! -f "$ATICONFIG" ]
then
	log "aticonfig is required. I expect it to be at ${ATICONFIG}."
fi

log "Checking configuration.."

CONFIG="/etc/conf.d/ati_clocks.conf"

if [ ! -f "$CONFIG" ]
then
	log "Configuration file does not exist at ${CONFIG}."
	exit 1
fi

source /etc/conf.d/ati_clocks.conf

ATTEMPT=0
ATTEMPTS=10

while [ 1 = 1 ]
do

	ATTEMPT=$(($ATTEMPT + 1))

	if [ "$ATTEMPT" = "$ATTEMPTS" ]
	then
		log "Failed after ${ATTEMPTS} attempts."
		exit 1
	else
		if [ ! "$ATTEMPT" = 1 ]
		then
			log "Waiting a moment.."
			sleep 1
		fi
	fi

	SUCCESS=false

	log "Attempt $ATTEMPT of ${ATTEMPTS}.."

	if [ ! -z "$ATI_CLOCKS" ]
	then
		log "Setting clock speeds.."
		SUCCESS=false
		for DISPLAY_NUMBER in $(seq 0 5)
		do
			log "Trying display ${DISPLAY_NUMBER}.."
			export DISPLAY=":$DISPLAY_NUMBER"
			$ATICONFIG --adapter=0 --od-setclocks "$ATI_CLOCKS"
			if [ ! "$?" = "0" ]
			then
				log "$ATICONFIG failed."
				continue
			fi
			log "$ATICONFIG succeeded."
			SUCCESS=true
			break
		done
		if [ ! "$SUCCESS" = "true" ]
		then
			log "Failed to set clock speeds."
		fi
	else
		log "Clock speeds are not configured."
	fi

	if [ ! -z "$ATI_FAN" ]
	then
		log "Setting fan speeds.."
		SUCCESS=false
		for DISPLAY_NUMBER in $(seq 0 5)
		do
			log "Trying display ${DISPLAY_NUMBER}.."
			export DISPLAY=":$DISPLAY_NUMBER"
			$ATICONFIG --pplib-cmd "set fanspeed 0 ${ATI_FAN}"
                	if [ ! "$?" = "0" ]
        	        then
	                        log "$ATICONFIG failed."
                        	continue
                	fi
        	        log "$ATICONFIG succeeded."
			SUCCESS=true
                	break
		done
		if [ ! "$SUCCESS" = "true" ]
		then
			log "Failed to set fan speeds."
		fi
	else
		log "Fan speeds are not configured."
	fi
	
	if [ "$SUCCESS" = "true" ]
	then
		break
	fi
done

log "All done."
exit 0
